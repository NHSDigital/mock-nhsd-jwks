<ProxyEndpoint name="default">
    <PreFlow>
        <Request>
            <Step>
                <Name>KeyValueMapOperations.GetIdentityServiceConfig</Name>
            </Step>
            <Step>
                <Name>Javascript.UnpackVars</Name>
            </Step>
        </Request>
    </PreFlow>
    <Flows>      
      <Flow name="AddPayloadToPing">
        <Description/>
        <Request/>
        <Response>
          <Step>
            <Name>AssignMessage.AddPayloadToPing</Name>
          </Step>
        </Response>
        <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
      </Flow>    
      <Flow name="cis2_simulated_token">
          <Description/>
          <Request>
              <Step>
                  <Name>LookupCache.SimulatedAuthAuthMethod</Name>
              </Step>
          </Request>
          <Response>
              <Step>
                  <Name>AssignMessage.SimulatedTokenPayload_N3_SMARTCARD</Name>
                  <Condition>auth_method Equals "N3_SMARTCARD"</Condition>
              </Step>
              <Step>
                  <Name>AssignMessage.SimulatedTokenPayload_FIDO2</Name>
                  <Condition>auth_method Equals "FIDO2"</Condition>
              </Step>
              <Step>
                  <Name>AssignMessage.SimulatedTokenPayload_IOS</Name>
                  <Condition>auth_method Equals "IOS"</Condition>
              </Step>
              <Step>
                  <Name>AssignMessage.SimulatedTokenPayload</Name>
                  <Condition>auth_method Equals null</Condition>
              </Step>
          </Response>
          <Condition>(proxy.pathsuffix MatchesPath "/cis2_simulated_token") and (request.verb = "POST")</Condition>
      </Flow>
      <Flow name="Flow.SimulatedUserAuth">
          <Description>Provide a simulated user authorization interaction - Display login dialogue</Description>
          <Request>
              <!-- Check the redirect_uri and client_id. Although we generate the redirect to this URL, an app developer might get creative somehow
          and we need to illustrate that what they are doing will break the authentication. -->
          <!-- <Step>
            <Name>RaiseFault.Unauthorized</Name>
            <Condition>(request.queryparam.client_id NotEquals identity-service-config.cis2.client_id) or (request.queryparam.redirect_uri NotEquals identity-service-config.cis2.redirect_uri)</Condition>
          </Step> -->
          <Step>
            <Name>AssignMessage.SimulatedAuthPage</Name>
          </Step>
        </Request>
        <Condition>(proxy.pathsuffix MatchesPath "/simulated_auth") and (request.verb Equals "GET")</Condition>
      </Flow>
      <Flow name="Flow.SimulatedUserAuthPost">
          <Description>Provide a simulated user authorization interaction - Process login</Description>
          <Response>
              <Step>
                  <Name>AssignMessage.GenerateSimulatedAuthCode</Name>
              </Step>
              <Step>
                  <Name>PopulateCache.SimulatedAuthAuthMethod</Name>
              </Step>
              <Step>
                  <Name>AssignMessage.RedirectToApigeeCallback</Name>
              </Step>
          </Response>
          <Condition>(proxy.pathsuffix MatchesPath "/simulated_auth") and (request.verb Equals "POST")</Condition>
      </Flow>
  </Flows>
    <PostClientFlow name="PostClientFlow">
      <Response>
        <Step>
          <Name>FlowCallout.LogToSplunk</Name>
        </Step>
      </Response>
    </PostClientFlow>  
    <HTTPProxyConnection>
        <BasePath>{{ SERVICE_BASE_PATH }}</BasePath>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="NoRouteSimulatedAuthPage">
        <Condition>(proxy.pathsuffix MatchesPath "/simulated_auth") and ((request.verb = "GET") or (request.verb = "HEAD") or (request.verb = "POST"))</Condition>
    </RouteRule>
    <RouteRule name="NoRoutePing">
      <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
    </RouteRule>
    <RouteRule name="NoRouteCis2MockToken">
      <Condition>(proxy.pathsuffix MatchesPath "/cis2_simulated_token") and ((request.verb = "POST"))</Condition>
    </RouteRule>
    <RouteRule name="apim">
      <TargetEndpoint>apim</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>
